Terminals unused in grammar

   NOTOKEN
   CHRLIT
   FOR
   REPEAT
   TO
   UNTIL
   ERROR


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD

    2 identifier_list: ID
    3                | identifier_list COMMA ID

    4 declarations: %empty
    5             | declarations VAR identifier_list COLON type SEMICOLON

    6 type: standard_type
    7     | ARRAY LBRACKET INTLIT RANGE INTLIT RBRACKET OF standard_type

    8 standard_type: INTEGER
    9              | REAL

   10 subprogram_declarations: %empty
   11                        | subprogram_declarations subprogram_declaration SEMICOLON

   12 subprogram_declaration: subprogram_head declarations compound_statement

   13 subprogram_head: FUNCTION ID arguments COLON standard_type SEMICOLON
   14                | PROCEDURE ID arguments SEMICOLON

   15 arguments: %empty
   16          | LPAREN parameter_list RPAREN

   17 parameter_list: identifier_list COLON type
   18               | parameter_list SEMICOLON identifier_list COLON type

   19 compound_statement: BEGAN optional_statements END

   20 optional_statements: statement_list
   21                    | %empty

   22 statement_list: statement
   23               | statement_list SEMICOLON statement

   24 statement: variable ASSIGNOP expression
   25          | procedure_statement
   26          | compound_statement
   27          | IF expression THEN statement ELSE statement
   28          | WHILE expression DO statement

   29 variable: ID
   30         | ID LBRACKET expression RBRACKET

   31 procedure_statement: ID
   32                    | ID LPAREN expression_list RPAREN

   33 expression_list: expression
   34                | expression_list COMMA expression

   35 expression: simple_expression
   36           | simple_expression relop simple_expression

   37 relop: EQU
   38      | NEQ
   39      | LES
   40      | LEQ
   41      | GRT
   42      | GEQ

   43 simple_expression: term
   44                  | sign term
   45                  | simple_expression addop term

   46 addop: PLUS
   47      | MINUS
   48      | OR

   49 term: factor
   50     | term mulop factor

   51 mulop: STAR
   52      | SLASH
   53      | DIV
   54      | MOD
   55      | AND

   56 factor: ID
   57       | ID LPAREN expression_list RPAREN
   58       | INTLIT
   59       | REALIT
   60       | LPAREN expression RPAREN
   61       | NOT factor

   62 sign: PLUS
   63     | MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
NOTOKEN (258)
INTLIT (259) 7 58
PLUS (260) 46 62
MINUS (261) 47 63
STAR (262) 51
SLASH (263) 52
LPAREN (264) 1 16 32 57 60
RPAREN (265) 1 16 32 57 60
RBRACKET (266) 7 30
LBRACKET (267) 7 30
COLON (268) 5 13 17 18
SEMICOLON (269) 1 5 11 13 14 18 23
COMMA (270) 3 34
PERIOD (271) 1
RANGE (272) 7
ASSIGNOP (273) 24
EQU (274) 37
NEQ (275) 38
LES (276) 39
GRT (277) 41
GEQ (278) 42
CHRLIT (279)
REALIT (280) 59
ID (281) 1 2 3 13 14 29 30 31 32 56 57
AND (282) 55
ARRAY (283) 7
BEGAN (284) 19
DIV (285) 53
DO (286) 28
ELSE (287) 27
END (288) 19
FOR (289)
FUNCTION (290) 13
IF (291) 27
INTEGER (292) 8
MOD (293) 54
NOT (294) 61
OF (295) 7
OR (296) 48
PROCEDURE (297) 14
PROGRAM (298) 1
REAL (299) 9
REPEAT (300)
THEN (301) 27
TO (302)
UNTIL (303)
VAR (304) 5
WHILE (305) 28
LEQ (306) 40
ERROR (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
identifier_list (55)
    on left: 2 3, on right: 1 3 5 17 18
declarations (56)
    on left: 4 5, on right: 1 5 12
type (57)
    on left: 6 7, on right: 5 17 18
standard_type (58)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (59)
    on left: 10 11, on right: 1 11
subprogram_declaration (60)
    on left: 12, on right: 11
subprogram_head (61)
    on left: 13 14, on right: 12
arguments (62)
    on left: 15 16, on right: 13 14
parameter_list (63)
    on left: 17 18, on right: 16 18
compound_statement (64)
    on left: 19, on right: 1 12 26
optional_statements (65)
    on left: 20 21, on right: 19
statement_list (66)
    on left: 22 23, on right: 20 23
statement (67)
    on left: 24 25 26 27 28, on right: 22 23 27 28
variable (68)
    on left: 29 30, on right: 24
procedure_statement (69)
    on left: 31 32, on right: 25
expression_list (70)
    on left: 33 34, on right: 32 34 57
expression (71)
    on left: 35 36, on right: 24 27 28 30 33 34 60
relop (72)
    on left: 37 38 39 40 41 42, on right: 36
simple_expression (73)
    on left: 43 44 45, on right: 35 36 45
addop (74)
    on left: 46 47 48, on right: 45
term (75)
    on left: 49 50, on right: 43 44 45 50
mulop (76)
    on left: 51 52 53 54 55, on right: 50
factor (77)
    on left: 56 57 58 59 60 61, on right: 49 50 61
sign (78)
    on left: 62 63, on right: 44


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . ID LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID . LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD

    LPAREN  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM ID LPAREN . identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID .

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: PROGRAM ID LPAREN identifier_list . RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD
    3 identifier_list: identifier_list . COMMA ID

    RPAREN  shift, and go to state 8
    COMMA   shift, and go to state 9


State 8

    1 program: PROGRAM ID LPAREN identifier_list RPAREN . SEMICOLON declarations subprogram_declarations compound_statement PERIOD

    SEMICOLON  shift, and go to state 10


State 9

    3 identifier_list: identifier_list COMMA . ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON . declarations subprogram_declarations compound_statement PERIOD

    $default  reduce using rule 4 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list COMMA ID .

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON declarations . subprogram_declarations compound_statement PERIOD
    5 declarations: declarations . VAR identifier_list COLON type SEMICOLON

    VAR  shift, and go to state 13

    $default  reduce using rule 10 (subprogram_declarations)

    subprogram_declarations  go to state 14


State 13

    5 declarations: declarations VAR . identifier_list COLON type SEMICOLON

    ID  shift, and go to state 6

    identifier_list  go to state 15


State 14

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations . compound_statement PERIOD
   11 subprogram_declarations: subprogram_declarations . subprogram_declaration SEMICOLON

    BEGAN      shift, and go to state 16
    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_head         go to state 20
    compound_statement      go to state 21


State 15

    3 identifier_list: identifier_list . COMMA ID
    5 declarations: declarations VAR identifier_list . COLON type SEMICOLON

    COLON  shift, and go to state 22
    COMMA  shift, and go to state 9


State 16

   19 compound_statement: BEGAN . optional_statements END

    ID     shift, and go to state 23
    BEGAN  shift, and go to state 16
    IF     shift, and go to state 24
    WHILE  shift, and go to state 25

    $default  reduce using rule 21 (optional_statements)

    compound_statement   go to state 26
    optional_statements  go to state 27
    statement_list       go to state 28
    statement            go to state 29
    variable             go to state 30
    procedure_statement  go to state 31


State 17

   13 subprogram_head: FUNCTION . ID arguments COLON standard_type SEMICOLON

    ID  shift, and go to state 32


State 18

   14 subprogram_head: PROCEDURE . ID arguments SEMICOLON

    ID  shift, and go to state 33


State 19

   11 subprogram_declarations: subprogram_declarations subprogram_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 20

   12 subprogram_declaration: subprogram_head . declarations compound_statement

    $default  reduce using rule 4 (declarations)

    declarations  go to state 35


State 21

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement . PERIOD

    PERIOD  shift, and go to state 36


State 22

    5 declarations: declarations VAR identifier_list COLON . type SEMICOLON

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type           go to state 40
    standard_type  go to state 41


State 23

   29 variable: ID .
   30         | ID . LBRACKET expression RBRACKET
   31 procedure_statement: ID .
   32                    | ID . LPAREN expression_list RPAREN

    LPAREN    shift, and go to state 42
    LBRACKET  shift, and go to state 43

    ASSIGNOP  reduce using rule 29 (variable)
    $default  reduce using rule 31 (procedure_statement)


State 24

   27 statement: IF . expression THEN statement ELSE statement

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 51
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 25

   28 statement: WHILE . expression DO statement

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 56
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 26

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 27

   19 compound_statement: BEGAN optional_statements . END

    END  shift, and go to state 57


State 28

   20 optional_statements: statement_list .
   23 statement_list: statement_list . SEMICOLON statement

    SEMICOLON  shift, and go to state 58

    $default  reduce using rule 20 (optional_statements)


State 29

   22 statement_list: statement .

    $default  reduce using rule 22 (statement_list)


State 30

   24 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 59


State 31

   25 statement: procedure_statement .

    $default  reduce using rule 25 (statement)


State 32

   13 subprogram_head: FUNCTION ID . arguments COLON standard_type SEMICOLON

    LPAREN  shift, and go to state 60

    $default  reduce using rule 15 (arguments)

    arguments  go to state 61


State 33

   14 subprogram_head: PROCEDURE ID . arguments SEMICOLON

    LPAREN  shift, and go to state 60

    $default  reduce using rule 15 (arguments)

    arguments  go to state 62


State 34

   11 subprogram_declarations: subprogram_declarations subprogram_declaration SEMICOLON .

    $default  reduce using rule 11 (subprogram_declarations)


State 35

    5 declarations: declarations . VAR identifier_list COLON type SEMICOLON
   12 subprogram_declaration: subprogram_head declarations . compound_statement

    BEGAN  shift, and go to state 16
    VAR    shift, and go to state 13

    compound_statement  go to state 63


State 36

    1 program: PROGRAM ID LPAREN identifier_list RPAREN SEMICOLON declarations subprogram_declarations compound_statement PERIOD .

    $default  reduce using rule 1 (program)


State 37

    7 type: ARRAY . LBRACKET INTLIT RANGE INTLIT RBRACKET OF standard_type

    LBRACKET  shift, and go to state 64


State 38

    8 standard_type: INTEGER .

    $default  reduce using rule 8 (standard_type)


State 39

    9 standard_type: REAL .

    $default  reduce using rule 9 (standard_type)


State 40

    5 declarations: declarations VAR identifier_list COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 41

    6 type: standard_type .

    $default  reduce using rule 6 (type)


State 42

   32 procedure_statement: ID LPAREN . expression_list RPAREN

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression_list    go to state 66
    expression         go to state 67
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 43

   30 variable: ID LBRACKET . expression RBRACKET

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 68
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 44

   58 factor: INTLIT .

    $default  reduce using rule 58 (factor)


State 45

   62 sign: PLUS .

    $default  reduce using rule 62 (sign)


State 46

   63 sign: MINUS .

    $default  reduce using rule 63 (sign)


State 47

   60 factor: LPAREN . expression RPAREN

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 69
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 48

   59 factor: REALIT .

    $default  reduce using rule 59 (factor)


State 49

   56 factor: ID .
   57       | ID . LPAREN expression_list RPAREN

    LPAREN  shift, and go to state 70

    $default  reduce using rule 56 (factor)


State 50

   61 factor: NOT . factor

    INTLIT  shift, and go to state 44
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    factor  go to state 71


State 51

   27 statement: IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 72


State 52

   35 expression: simple_expression .
   36           | simple_expression . relop simple_expression
   45 simple_expression: simple_expression . addop term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    EQU    shift, and go to state 75
    NEQ    shift, and go to state 76
    LES    shift, and go to state 77
    GRT    shift, and go to state 78
    GEQ    shift, and go to state 79
    OR     shift, and go to state 80
    LEQ    shift, and go to state 81

    $default  reduce using rule 35 (expression)

    relop  go to state 82
    addop  go to state 83


State 53

   43 simple_expression: term .
   50 term: term . mulop factor

    STAR   shift, and go to state 84
    SLASH  shift, and go to state 85
    AND    shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 43 (simple_expression)

    mulop  go to state 89


State 54

   49 term: factor .

    $default  reduce using rule 49 (term)


State 55

   44 simple_expression: sign . term

    INTLIT  shift, and go to state 44
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    term    go to state 90
    factor  go to state 54


State 56

   28 statement: WHILE expression . DO statement

    DO  shift, and go to state 91


State 57

   19 compound_statement: BEGAN optional_statements END .

    $default  reduce using rule 19 (compound_statement)


State 58

   23 statement_list: statement_list SEMICOLON . statement

    ID     shift, and go to state 23
    BEGAN  shift, and go to state 16
    IF     shift, and go to state 24
    WHILE  shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 92
    variable             go to state 30
    procedure_statement  go to state 31


State 59

   24 statement: variable ASSIGNOP . expression

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 93
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 60

   16 arguments: LPAREN . parameter_list RPAREN

    ID  shift, and go to state 6

    identifier_list  go to state 94
    parameter_list   go to state 95


State 61

   13 subprogram_head: FUNCTION ID arguments . COLON standard_type SEMICOLON

    COLON  shift, and go to state 96


State 62

   14 subprogram_head: PROCEDURE ID arguments . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 63

   12 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


State 64

    7 type: ARRAY LBRACKET . INTLIT RANGE INTLIT RBRACKET OF standard_type

    INTLIT  shift, and go to state 98


State 65

    5 declarations: declarations VAR identifier_list COLON type SEMICOLON .

    $default  reduce using rule 5 (declarations)


State 66

   32 procedure_statement: ID LPAREN expression_list . RPAREN
   34 expression_list: expression_list . COMMA expression

    RPAREN  shift, and go to state 99
    COMMA   shift, and go to state 100


State 67

   33 expression_list: expression .

    $default  reduce using rule 33 (expression_list)


State 68

   30 variable: ID LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 101


State 69

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 102


State 70

   57 factor: ID LPAREN . expression_list RPAREN

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression_list    go to state 103
    expression         go to state 67
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 71

   61 factor: NOT factor .

    $default  reduce using rule 61 (factor)


State 72

   27 statement: IF expression THEN . statement ELSE statement

    ID     shift, and go to state 23
    BEGAN  shift, and go to state 16
    IF     shift, and go to state 24
    WHILE  shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 104
    variable             go to state 30
    procedure_statement  go to state 31


State 73

   46 addop: PLUS .

    $default  reduce using rule 46 (addop)


State 74

   47 addop: MINUS .

    $default  reduce using rule 47 (addop)


State 75

   37 relop: EQU .

    $default  reduce using rule 37 (relop)


State 76

   38 relop: NEQ .

    $default  reduce using rule 38 (relop)


State 77

   39 relop: LES .

    $default  reduce using rule 39 (relop)


State 78

   41 relop: GRT .

    $default  reduce using rule 41 (relop)


State 79

   42 relop: GEQ .

    $default  reduce using rule 42 (relop)


State 80

   48 addop: OR .

    $default  reduce using rule 48 (addop)


State 81

   40 relop: LEQ .

    $default  reduce using rule 40 (relop)


State 82

   36 expression: simple_expression relop . simple_expression

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    simple_expression  go to state 105
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 83

   45 simple_expression: simple_expression addop . term

    INTLIT  shift, and go to state 44
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    term    go to state 106
    factor  go to state 54


State 84

   51 mulop: STAR .

    $default  reduce using rule 51 (mulop)


State 85

   52 mulop: SLASH .

    $default  reduce using rule 52 (mulop)


State 86

   55 mulop: AND .

    $default  reduce using rule 55 (mulop)


State 87

   53 mulop: DIV .

    $default  reduce using rule 53 (mulop)


State 88

   54 mulop: MOD .

    $default  reduce using rule 54 (mulop)


State 89

   50 term: term mulop . factor

    INTLIT  shift, and go to state 44
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    factor  go to state 107


State 90

   44 simple_expression: sign term .
   50 term: term . mulop factor

    STAR   shift, and go to state 84
    SLASH  shift, and go to state 85
    AND    shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 44 (simple_expression)

    mulop  go to state 89


State 91

   28 statement: WHILE expression DO . statement

    ID     shift, and go to state 23
    BEGAN  shift, and go to state 16
    IF     shift, and go to state 24
    WHILE  shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 108
    variable             go to state 30
    procedure_statement  go to state 31


State 92

   23 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 23 (statement_list)


State 93

   24 statement: variable ASSIGNOP expression .

    $default  reduce using rule 24 (statement)


State 94

    3 identifier_list: identifier_list . COMMA ID
   17 parameter_list: identifier_list . COLON type

    COLON  shift, and go to state 109
    COMMA  shift, and go to state 9


State 95

   16 arguments: LPAREN parameter_list . RPAREN
   18 parameter_list: parameter_list . SEMICOLON identifier_list COLON type

    RPAREN     shift, and go to state 110
    SEMICOLON  shift, and go to state 111


State 96

   13 subprogram_head: FUNCTION ID arguments COLON . standard_type SEMICOLON

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    standard_type  go to state 112


State 97

   14 subprogram_head: PROCEDURE ID arguments SEMICOLON .

    $default  reduce using rule 14 (subprogram_head)


State 98

    7 type: ARRAY LBRACKET INTLIT . RANGE INTLIT RBRACKET OF standard_type

    RANGE  shift, and go to state 113


State 99

   32 procedure_statement: ID LPAREN expression_list RPAREN .

    $default  reduce using rule 32 (procedure_statement)


State 100

   34 expression_list: expression_list COMMA . expression

    INTLIT  shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    LPAREN  shift, and go to state 47
    REALIT  shift, and go to state 48
    ID      shift, and go to state 49
    NOT     shift, and go to state 50

    expression         go to state 114
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54
    sign               go to state 55


State 101

   30 variable: ID LBRACKET expression RBRACKET .

    $default  reduce using rule 30 (variable)


State 102

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 103

   34 expression_list: expression_list . COMMA expression
   57 factor: ID LPAREN expression_list . RPAREN

    RPAREN  shift, and go to state 115
    COMMA   shift, and go to state 100


State 104

   27 statement: IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 116


State 105

   36 expression: simple_expression relop simple_expression .
   45 simple_expression: simple_expression . addop term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    OR     shift, and go to state 80

    $default  reduce using rule 36 (expression)

    addop  go to state 83


State 106

   45 simple_expression: simple_expression addop term .
   50 term: term . mulop factor

    STAR   shift, and go to state 84
    SLASH  shift, and go to state 85
    AND    shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    $default  reduce using rule 45 (simple_expression)

    mulop  go to state 89


State 107

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 108

   28 statement: WHILE expression DO statement .

    $default  reduce using rule 28 (statement)


State 109

   17 parameter_list: identifier_list COLON . type

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type           go to state 117
    standard_type  go to state 41


State 110

   16 arguments: LPAREN parameter_list RPAREN .

    $default  reduce using rule 16 (arguments)


State 111

   18 parameter_list: parameter_list SEMICOLON . identifier_list COLON type

    ID  shift, and go to state 6

    identifier_list  go to state 118


State 112

   13 subprogram_head: FUNCTION ID arguments COLON standard_type . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 113

    7 type: ARRAY LBRACKET INTLIT RANGE . INTLIT RBRACKET OF standard_type

    INTLIT  shift, and go to state 120


State 114

   34 expression_list: expression_list COMMA expression .

    $default  reduce using rule 34 (expression_list)


State 115

   57 factor: ID LPAREN expression_list RPAREN .

    $default  reduce using rule 57 (factor)


State 116

   27 statement: IF expression THEN statement ELSE . statement

    ID     shift, and go to state 23
    BEGAN  shift, and go to state 16
    IF     shift, and go to state 24
    WHILE  shift, and go to state 25

    compound_statement   go to state 26
    statement            go to state 121
    variable             go to state 30
    procedure_statement  go to state 31


State 117

   17 parameter_list: identifier_list COLON type .

    $default  reduce using rule 17 (parameter_list)


State 118

    3 identifier_list: identifier_list . COMMA ID
   18 parameter_list: parameter_list SEMICOLON identifier_list . COLON type

    COLON  shift, and go to state 122
    COMMA  shift, and go to state 9


State 119

   13 subprogram_head: FUNCTION ID arguments COLON standard_type SEMICOLON .

    $default  reduce using rule 13 (subprogram_head)


State 120

    7 type: ARRAY LBRACKET INTLIT RANGE INTLIT . RBRACKET OF standard_type

    RBRACKET  shift, and go to state 123


State 121

   27 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 27 (statement)


State 122

   18 parameter_list: parameter_list SEMICOLON identifier_list COLON . type

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type           go to state 124
    standard_type  go to state 41


State 123

    7 type: ARRAY LBRACKET INTLIT RANGE INTLIT RBRACKET . OF standard_type

    OF  shift, and go to state 125


State 124

   18 parameter_list: parameter_list SEMICOLON identifier_list COLON type .

    $default  reduce using rule 18 (parameter_list)


State 125

    7 type: ARRAY LBRACKET INTLIT RANGE INTLIT RBRACKET OF . standard_type

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    standard_type  go to state 126


State 126

    7 type: ARRAY LBRACKET INTLIT RANGE INTLIT RBRACKET OF standard_type .

    $default  reduce using rule 7 (type)
